{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","href","style","color","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNA+EeA,0LA1EX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,gCACEF,EAAAC,EAAAC,cAAA,4CACwBF,EAAAC,EAAAC,cAAA,WADxB,6BAEkBF,EAAAC,EAAAC,cAAA,WAChBF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,iCAAiCC,MAAO,CAACC,MAAM,UAAvD,YAGJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,0QACkDH,EAAAC,EAAAC,cAAA,WADlD,+PAE4CF,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAAA,WAHF,wmBAKoCF,EAAAC,EAAAC,cAAA,WALpC,orBAOsFF,EAAAC,EAAAC,cAAA,WAPtF,ivBASEF,EAAAC,EAAAC,cAAA,WATF,sQAYAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,yFACAH,EAAAC,EAAAC,cAAA,WAFF,mCAIEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,iDACAH,EAAAC,EAAAC,cAAA,WAPF,yBAUAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,yFACAH,EAAAC,EAAAC,cAAA,WAFF,2BAIEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4GACAF,EAAAC,EAAAC,cAAA,uMACqDF,EAAAC,EAAAC,cAAA,WACnDF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2CAAR,6DACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2CAAR,8DACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gCAAR,4DAAsDJ,EAAAC,EAAAC,cAAA,WAJxD,sKAOAF,EAAAC,EAAAC,cAAA,4FAGJF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,gEAINF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAtELI,cCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.26e2ef7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-deco\"/>\n        <div className=\"App-banner\">\n        <h1>林芷庭</h1>\n          <p>\n            信箱: hw810108@gmail.com<br/>\n            電話: 0988-550-901<br/>\n            <a href=\"https://github.com/ChihTingLin\" style={{color:'white'}}>GitHub</a>\n          </p>\n        </div>\n        <div className=\"App-wrapper\">\n          <h2>簡介</h2>\n          <p className=\"App-section\">\n            2017 年從程式設計班畢業後，因為個人的興趣而選擇網站前端這條路，而不是在課程中學的網站後端。<br/>\n            儘管因此有更從未接觸過的的技術要學習，因為熱情所在反而在每天的工作中充滿向前的動力。<br/>\n            <br/>\n            我本身具備 Java 與網站前端的程式能力，因此幸運的找到了一份同時需要這兩種技能的工作，在工作的期間運用我本身已經具備的能力完成交辦的工作項目，\n            同時我也不斷的自我學習，補足自己在網站前端程式設計這一塊不足的地方。<br/>\n            工作中接手了一個混雜了各種前端框架技術的專案維護工作，一開始我有些埋怨開發專案的人用了太多種技術，\n            但也因為這個專案接觸到 ReactJs 從而引起了我的興趣，我運用工作之餘的時間來自學 React，並且在之後參與公司一個使用 React 的手機版網站的開發專案之中。<br/>\n            在開發的時候遇到的一些困難，例如，因為專案中搭配使用了 Redux，因此在開發中我必須邊進行邊學習 Redux；因為各個產品線陸續開發加入專案中使得專案的複雜程度大幅增加，之後專案中又引入 Redux-saga 又需要花時間來學習新的套件，雖然辛苦但這段時間也是我工作以來成長最多的時候了。\n            <br/>\n            現在，經過一年多網站開發的磨礪，對我來說是時候跳出已經習慣的工作環境，尋求更多的挑戰！\n          </p>\n          <h2>學經歷</h2>\n          <p className=\"App-section\">\n            <span className=\"App-itemTitle\">國立臺灣師範大學 圖文傳播學系</span>\n            <br/>\n            2012／09 ～ 2016／06\n            <br/>\n            <br/>\n            <span className=\"App-itemTitle\">Java & Android 程式設計班</span>\n            <br/>\n            2016 / 10 ~ 2017 / 04\n          </p>\n          <div className=\"App-section\">\n            <span className=\"App-itemTitle\">易遊網股份有限公司 前端工程師</span>\n            <br/>\n              2017 / 05 ~ 至今\n            <br/>\n            <ul>\n              <li>使用 Java 開發與維護基於 Play Framework 的專案</li>\n              <li>\n                參與票券與國內旅遊線別的行動版網站開發，使用 ReactJs, Redux, NextJs 等前端框架<br/>\n                <a href=\"https://activity.eztravel.com.tw/taiwan\">易遊網 國內票券首頁 |</a>\n                <a href=\"https://activity.eztravel.com.tw/global\"> 易遊網 國外票券首頁 |</a> \n                <a href=\"https://trip.eztravel.com.tw\"> 易遊網 國內旅遊首頁</a><br/>\n                使用手機或是以行動裝置模擬器開啟連結就能看到行動版網站\n              </li>\n              <li>維護行動網站與 App 共用的 NodeJS API</li>\n            </ul>\n          </div>\n          <h2>技能</h2>\n          <div className=\"App-section\">\n            <ul>\n              <li>JavaScript (ES5/ES6/ES7)</li>\n              <li>HTML</li>\n              <li>CSS (Sass)</li>\n              <li>React</li>\n              <li>Redux</li>\n              <li>Webpack</li>\n              <li>Git</li>\n              <li>Java</li>\n              <li>英語多益測驗 785 分</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"App-curve\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}